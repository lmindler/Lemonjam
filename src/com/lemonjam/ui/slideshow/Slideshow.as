package com.lemonjam.ui.slideshow{	import flash.events.ProgressEvent;	import flash.events.Event;		import com.lemonjam.ui.slide.Slide;	import com.lemonjam.ui.slideshow.SlideshowBase;	import com.asual.swfaddress.*;	import com.lemonjam.events.SlideshowEvent;	import com.greensock.*;		public class Slideshow extends SlideshowBase	{		private var _currentPhotoNum:Number = 0;		private var _loadCounter:Number = 0;				public function Slideshow(){}						public function build():void		{			var _uri:String = SWFAddress.getValue();						var _num:Number = 0;						if(_uri.search("/" + baseURI) > -1 || _uri.search(baseURI) > -1){				var _remaining:String = _uri.replace("/", "");				_remaining = _remaining.replace("/", "");				var _endURI:String = _remaining.substr(baseURI.length, (_remaining.length - baseURI.length));								var _match:Boolean = false;				var _endNumber:Number = 0;								for(var i=0;i<_images.length;i++){					if(_endURI == _images[i].uri){						_endNumber = i + 1;						_match = true;												break;					}				}								if(!_match){					SWFAddress.setValue(baseURI + "/" + _images[0].uri);					currentPhoto = 0;				}				else{										_isOf.currentPhoto = _endNumber;					var _rightAvailable:Boolean = (_endNumber == _images.length-1) ? false : true;					var _leftAvailable:Boolean = (_endNumber == 1) ? false : true;					dispatchEvent(new SlideshowEvent(SlideshowEvent.NEXT_AVAILABLE, _rightAvailable, true));					dispatchEvent(new SlideshowEvent(SlideshowEvent.PREV_AVAILABLE, _leftAvailable, true));					currentPhoto = _endNumber - 1;					showing = true;					buildInSlide(_endNumber-1);				}			}		}				public function buildInSlide(num:Number):void		{			for(var i=0;i<_images.length;i++){				if(num == i){					_images[i].build(true);					TweenLite.to(_images[i], .3, {alpha:1});				}				else if(_images[i].showing){					TweenLite.to(_images[i], .3, {alpha:0});					_images[i].unbuild();				}			}		}				/*public function build():void		{			var _uri:String = SWFAddress.getValue();						var _num:Number = 0;						if(_uri.search("/" + baseURI) > -1 || _uri.search(baseURI) > -1){				var _remaining:String = _uri.replace("/", "");				_remaining = _remaining.replace("/", "");				var _endURI:String = _remaining.substr(baseURI.length, (_remaining.length - baseURI.length));								var _endNumber:Number = Number(_endURI);												_isOf.currentPhoto = _endNumber;				var _rightAvailable:Boolean = (_endNumber == _images.length-1) ? false : true;				var _leftAvailable:Boolean = (_endNumber == 1) ? false : true;				dispatchEvent(new SlideshowEvent(SlideshowEvent.NEXT_AVAILABLE, _rightAvailable, true));				dispatchEvent(new SlideshowEvent(SlideshowEvent.PREV_AVAILABLE, _leftAvailable, true));								if(_endNumber == 0 || Number(_endURI) >= data.length || _endURI == ""){					trace("should be setting to a real url");					SWFAddress.setValue(baseURI + "/" + _images[0].uri);				}				else{					showing = true;										for(var i=0;i<_images.length;i++){						if(Number(_endURI) == i){							_images[i].build(true);							TweenLite.to(_images[i], .3, {alpha:1});							this.currentPhoto = i;						}						else if(_images[i].showing){							TweenLite.to(_images[i], .3, {alpha:0});							_images[i].unbuild();						}					}				}			}		}*/				public function unbuild():void		{			for(var i=0;i<_images.length;i++){				if(_images[i].showing)		_images[i].unbuild();			}			showing = false;		}				public function dataLoaded(value:Array):void		{			data = value;						for(var i=0;i<data.length;i++){				var _img = new Slide(data[i]);				this.addChildAt(_img, 0);				_images.push(_img);				_img.addEventListener(ProgressEvent.PROGRESS, _progress);				_img.addEventListener(Event.COMPLETE, _loadComplete);			}						_isOf.total = value.length;		}				private function _progress(e:ProgressEvent):void		{			dispatchEvent(new ProgressEvent(ProgressEvent.PROGRESS, true, false, e.bytesLoaded, e.bytesTotal));		}				private function _loadComplete(e:Event):void		{			resize();						var _loadedNum:Number = 0;			for(var i=0;i<_images.length;i++){				if(_images[i] == e.currentTarget){					_images[i].removeEventListener(Event.COMPLETE, _loadComplete);					_loadedNum = i;				}			}						if(_loadedNum < _images.length-1 && showing){								//trace("telling it to build in: " + 				if(_images[_loadedNum + 1].loaded == false){					_images[_loadedNum + 1].build(false);				}			}						}				public function getSlide(num:Number):void		{			SWFAddress.setValue(baseURI + "/" + _images[num].uri);		}	}}