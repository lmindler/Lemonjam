package com.lemonjam.ui{	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.geom.Rectangle;		import com.greensock.*;	import com.greensock.plugins.TweenPlugin;	import com.greensock.plugins.TintPlugin;	import com.greensock.plugins.ColorTransformPlugin;	import flash.events.Event;		public class Scrollbar extends MovieClip	{		private var _grabber:MovieClip;		private var _bar:MovieClip;				private var _totalWidth:Number = 0;				public function Scrollbar()		{			TweenPlugin.activate([TintPlugin, ColorTransformPlugin]);						_grabber = getChildByName("grabberMC") as MovieClip;			_bar = getChildByName("barMC") as MovieClip;		}				public function updateScroller(totalWidth:Number):void		{			_totalWidth = totalWidth;		}				public function updateWidth(value:Number):void		{			_bar.width = value;			_totalWidth = value;		}				public function build():void		{			if(! _grabber.hasEventListener(MouseEvent.MOUSE_DOWN)){				_grabber.buttonMode = true;				_grabber.addEventListener(MouseEvent.MOUSE_OVER, _grabberOver);				_grabber.addEventListener(MouseEvent.MOUSE_DOWN, _grabberDown);				_grabber.addEventListener(MouseEvent.MOUSE_OUT, _grabberOut);			}		}				public function unbuild():void		{			TweenLite.to(_grabber, .3, {colorTransform:{tintAmount:0}});			if(_grabber.hasEventListener(MouseEvent.MOUSE_DOWN)){				_grabber.buttonMode = false;				_grabber.removeEventListener(MouseEvent.MOUSE_OVER, _grabberOver);				_grabber.removeEventListener(MouseEvent.MOUSE_DOWN, _grabberDown);				_grabber.removeEventListener(MouseEvent.MOUSE_OUT, _grabberOut);			}			if(_grabber.hasEventListener(MouseEvent.MOUSE_MOVE))	_grabber.removeEventListener(MouseEvent.MOUSE_MOVE, _grabberMove);			if(_grabber.hasEventListener(MouseEvent.MOUSE_UP))		_grabber.removeEventListener(MouseEvent.MOUSE_UP, _stageUp);			if(stage.hasEventListener(MouseEvent.MOUSE_UP))			stage.removeEventListener(MouseEvent.MOUSE_UP, _stageUp);		}				private function _grabberOver(e:MouseEvent):void		{			TweenLite.to(_grabber, .3, {colorTransform:{tint:0xFFFFFF, tintAmount:1}});		}				private function _grabberOut(e:MouseEvent):void		{			TweenLite.to(_grabber, .3, {colorTransform:{tintAmount:0}});		}				private function _grabberUp(e:MouseEvent):void		{			_grabber.stopDrag();			stage.removeEventListener(MouseEvent.MOUSE_UP, _stageUp);			_grabber.removeEventListener(MouseEvent.MOUSE_UP, _grabberUp);			if(_grabber.hasEventListener(MouseEvent.MOUSE_MOVE))		_grabber.removeEventListener(MouseEvent.MOUSE_MOVE, _grabberMove);		}				private function _grabberDown(e:MouseEvent):void		{			if(! _grabber.hasEventListener(MouseEvent.MOUSE_MOVE))		_grabber.addEventListener(MouseEvent.MOUSE_MOVE, _grabberMove);			if (! _grabber.hasEventListener(MouseEvent.MOUSE_UP)){				_grabber.addEventListener(MouseEvent.MOUSE_UP, _grabberUp, false, 0, true);			}			stage.addEventListener(MouseEvent.MOUSE_UP, _stageUp);		}				private function _grabberMove(e:MouseEvent):void		{			var _rect:Rectangle = new Rectangle(0, 0, _bar.width - _grabber.width, 0);			_grabber.startDrag(false, _rect);						dispatchEvent(new Event(Event.CHANGE, true));		}				private function _stageUp(e:MouseEvent):void		{			_grabber.stopDrag();			stage.removeEventListener(MouseEvent.MOUSE_UP, _stageUp);			_grabber.removeEventListener(MouseEvent.MOUSE_UP, _grabberUp);			if(_grabber.hasEventListener(MouseEvent.MOUSE_MOVE))		_grabber.removeEventListener(MouseEvent.MOUSE_MOVE, _grabberMove);		}				public function get percentage():Number		{			var _total:Number = _bar.width - _grabber.width;			var _percent:Number = Math.round((_grabber.x * 100) / _total);			return _percent;		}			}}