package com.lemonjam.pages.photos{	import flash.display.MovieClip;		import com.lemonjam.pages.photos.PhotoSectionBase;	import com.lemonjam.ui.slideshow.Slideshow;	import com.lemonjam.ui.PatternOverlay;	import com.lemonjam.events.SlideshowEvent;	import flash.events.Event;		public class PhotoSection extends PhotoSectionBase	{				public function PhotoSection()		{			_slideshow = new Slideshow();			this.addChildAt(_slideshow, 0);						_overlay = new PatternOverlay(.5, 0x000000);			this.addChildAt(_overlay, 0);		}				public function build():void		{			showing = true;			this.resize();			this.alpha = 1;						_slideshow.addEventListener(SlideshowEvent.NEXT_AVAILABLE, _nextAvailable);			_slideshow.addEventListener(SlideshowEvent.PREV_AVAILABLE, _prevAvailable);			_slideshow.build();					}				public function unbuild():void		{			//_slideshow.unbuild();			showing = false;			this.alpha = 0;			this.x = (stage.stageWidth*2);						_rightArrow.unbuild();			_leftArrow.unbuild();			_slideshow.unbuild();		}						private function _nextAvailable(e:SlideshowEvent):void		{			setArrow(_rightArrow, ((e.available) ? true : false));		}				private function _prevAvailable(e:SlideshowEvent):void		{			setArrow(_leftArrow, ((e.available) ? true : false));		}				public function dataLoaded(value:Array):void		{			data = value;			_slideshow.dataLoaded(value);			_slideshow.baseURI = category;		}				public function resize():void		{			if(showing){				this.x = 0;				_rightArrow.y = _leftArrow.y = ((stage.stageHeight-65)/2) - (_rightArrow.height/2);				_rightArrow.x = stage.stageWidth - _rightArrow.width - 10;				_leftArrow.x = _leftArrow.width + 10;				_overlay.resize(stage.stageWidth, stage.stageHeight-65);								_slideshow.resize();			}			else{				this.x = (stage.stageWidth*2);			}		}	}}