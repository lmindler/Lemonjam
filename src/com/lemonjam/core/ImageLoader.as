package com.lemonjam.core{	import flash.display.*;	import flash.events.*;	import flash.net.*;	import flash.system.*;    import flash.net.URLRequest;    import com.lemonjam.events.SlideshowEvent;		public class ImageLoader extends Sprite	{		private var loader:Loader;		private var imagePath:String;		private var _showing:Boolean = true;		private var _loaded:Boolean = false;						public function ImageLoader(img:String)		{			var lc:LoaderContext=new LoaderContext();			lc.checkPolicyFile=true;						imagePath = img;			loader = new Loader();			configureListeners(loader.contentLoaderInfo);						var request:URLRequest = new URLRequest(imagePath);			loader.load(request, lc);		}				private function configureListeners(dispatcher:IEventDispatcher):void		{            dispatcher.addEventListener(Event.COMPLETE, handleComplete);			dispatcher.addEventListener(ProgressEvent.PROGRESS, _handleProgress);            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, handleIOError);        }				private function handleComplete(e:Event)		{			_loaded = true;						var bitmap:Bitmap = e.target.content;            if (bitmap != null) 	bitmap.smoothing = true;			addChild(loader.content);			if(_showing)	dispatchEvent(new Event(Event.COMPLETE, true));			dispatchEvent(new SlideshowEvent(SlideshowEvent.SLIDE_LOAD_COMPLETE, true, true));			removeProgress();		}				private function _handleProgress(e:ProgressEvent):void		{			dispatchEvent(new ProgressEvent(ProgressEvent.PROGRESS, true, false, e.bytesLoaded, e.bytesTotal));		}				private function handleIOError(e:Event)		{			trace("ioError: "+imagePath);		}				public function removeProgress():void		{			_showing = false;			if(loader.contentLoaderInfo.hasEventListener(ProgressEvent.PROGRESS)){				loader.contentLoaderInfo.removeEventListener(ProgressEvent.PROGRESS, _handleProgress);			}		}				public function addProgress():void		{			_showing = true;			if(! loader.contentLoaderInfo.hasEventListener(ProgressEvent.PROGRESS)){				loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, _handleProgress, false, 0, true);			}		}				public function getImagePath():String		{			return imagePath;		}				public function get loaded():Boolean		{			return _loaded;		}	}}